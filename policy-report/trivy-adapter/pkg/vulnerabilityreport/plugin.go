package vulnerabilityreport

import (
	"io"

	policyreport "sigs.k8s.io/wg-policy-prototypes/policy-report/pkg/api/wgpolicyk8s.io/v1alpha2"
	"github.com/aquasecurity/starboard/pkg/docker"
	"github.com/kubernetes-sigs/wg-policy-prototypes/policy-report/trivy-adapter/pkg/imgvuln"
	corev1 "k8s.io/api/core/v1"
)

// Plugin defines the interface between imgvuln and static vulnerability
// scanners.
type Plugin interface {

	// Init is a callback to initialize this plugin, e.g. ensure the default
	// configuration.
	Init(ctx imgvuln.PluginContext) error

	// GetScanJobSpec describes the pod that will be created by imgvuln when
	// it schedules a Kubernetes job to scan the workload with the specified
	// descriptor.
	// The second argument maps container names to Docker registry credentials,
	// which can be passed to the scanner as environment variables with values
	// set from returned secrets.
	GetScanJobSpec(ctx imgvuln.PluginContext, spec corev1.PodSpec, credentials map[string]docker.Auth) (
		corev1.PodSpec, []*corev1.Secret, error)

	// ParsePolicyReportData is a callback to parse and convert logs of
	// the pod controlled by the scan job to PolicyReport.
	ParsePolicyReportData(ctx imgvuln.PluginContext, imageRef string, logsReader io.ReadCloser) (
		policyreport.PolicyReport, error)
}